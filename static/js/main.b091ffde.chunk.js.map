{"version":3,"sources":["NewsTemplate.js","useAxios.js","BestStories.js","NewStories.js","TopStories.js","ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["NewsTemplate","props","ct","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeConverter","date","Feed","Event","id","Content","Summary","Extra","as","title","text","href","url","target","User","by","Meta","Like","Icon","name","score","useAxios","Linktype","useState","setIds","setError","loading","setLoading","final","setFinal","fetchNews","axios","get","response","success","data","useEffect","fetch","res","json","resJson","Promise","all","map","then","result","BestStories","type","document","Segment","raised","padded","inverted","Dimmer","active","Loader","Container","item","time","TopStories","Link","to","ErrorPage","very","Message","error","Header","Button","color","Component","App","state","activeitem","handleItemClick","e","setState","this","fluid","Menu","size","stackable","Item","NavLink","onClick","exact","path","render","NewStories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b091ffde.chunk.js","sourcesContent":["import { Feed, Icon } from 'semantic-ui-react';\n\nfunction timeConverter(UNIX_timestamp){\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n    return time;\n  }\n\nfunction NewsTemplate(props) {\n    // console.log(props);\n    \n    var t = props.date; \n    // console.log(t);\n    var ct = timeConverter(t);\n    // console.log(\"ct \",ct);\n    return (\n        <Feed.Event id={props.id}>\n            \n            <Feed.Content>\n                <Feed.Summary>\n                    <Feed.Extra as='h1'>\n                        {props.title}\n                    </Feed.Extra>\n                    <Feed.Extra text as='a' href={props.url} target='_blank'>\n                        Click to Know more <br/>\n                    </Feed.Extra>\n                    <Feed.User>{props.by}</Feed.User> posted this news on  <Feed.Date>{ct}</Feed.Date>\n                </Feed.Summary>\n                <Feed.Meta>\n                    <Feed.Like>\n                        <Icon name='thumbs up' />{props.score}\n                    </Feed.Like>\n                </Feed.Meta>\n            </Feed.Content>\n        </Feed.Event>\n    )\n}\n\nexport default NewsTemplate;\n\n// https://spread.epub.pub/epub/5a558ed551f7570007b4ccdf","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nexport default function useAxios(Linktype) {\n  const url = `https://hacker-news.firebaseio.com/v0/${Linktype}stories.json?print=pretty&orderBy=\"$key\"&limitToFirst=30`;\n  const [ids, setIds] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [final, setFinal] = useState([]);\n  useEffect(() => {\n    // console.log(\"Executing useEffect\");\n    (async () => {\n      try {\n        const res = await fetch(url);\n        const resJson = await res.json();\n        Promise.all(resJson.map(fetchNews))\n        .then((result) => {\n          setFinal(result);\n          setIds(resJson);   \n        });\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [url]);\n  async function fetchNews(id) {\n    try {\n      const response = await axios.get(\n        `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n      );\n      return {\n        success: true,\n        data: response.data,\n      };\n    } catch (error) {\n      return {\n        success: false,\n      };\n    }\n  }\n  return { loading, final };\n}","import React from 'react';\nimport { Container, Dimmer, Feed, Loader, Segment } from 'semantic-ui-react';\nimport NewsTemplate from './NewsTemplate';\nimport useAxios from './useAxios';\n\n\nfunction BestStories(props) {\n    var Linktype = props.type;  \n    const { loading, final } = useAxios(Linktype);\n    document.title = \"HackerNews | Best Stories\";\n    if (loading) {\n        return (\n            <div id=\"loa\">\n                <Segment raised padded inverted id='loaders'>\n                    <Dimmer active>\n                        <Loader inverted></Loader>\n                    </Dimmer>\n                </Segment>\n            </div>\n        )\n    }\n    else {\n        return (\n            <Container >\n                <Feed>\n                    {final.map((item) => {\n                        const {id, title, by, url, score, time } = item.data\n                        return (\n                            <NewsTemplate\n                                key={id}\n                                title={title}\n                                by={by}\n                                url={url}\n                                score={score}\n                                date={time}\n                            />\n                        )\n                    })}\n                </Feed>\n            </Container>\n        )\n    }\n}\n\nexport default BestStories;","import React from 'react';\nimport { Container, Dimmer, Feed, Loader, Segment } from 'semantic-ui-react';\nimport NewsTemplate from './NewsTemplate';\nimport useAxios from './useAxios';\nimport {Link} from 'react-router-dom';\n\n\nfunction TopStories(props) {\n    var Linktype = props.type;\n    const{loading,final} = useAxios(Linktype);\n    document.title = \"HackerNews | New Stories\";\n    if (loading) {\n        return (\n            <div id=\"loa\">\n                <Segment  raised padded inverted id='loaders'>\n                    <Dimmer active>\n                        <Loader inverted></Loader>\n                    </Dimmer>\n                </Segment>\n            </div>\n        )\n    }\n    else {\n        return (\n            <Container >\n                <Feed>\n                    {final.map((item) => {\n                        const {id, title, by, url, score, time } = item.data\n                        return (\n                            <NewsTemplate\n                                as={Link} to={`/new/${id}`}\n                                key={id}\n                                title={title}\n                                by={by}\n                                url={url}\n                                score={score}\n                                date={time}\n                            />\n                        )\n                    })}\n                </Feed>\n            </Container>\n        )\n    }\n}\n\nexport default TopStories;","import React from 'react';\nimport { Container, Dimmer, Feed, Loader, Segment } from 'semantic-ui-react';\nimport NewsTemplate from './NewsTemplate';\nimport useAxios from './useAxios';\n\n\nfunction TopStories(props) {\n    var Linktype = props.type;\n    // const [loaded, setLoaded] = useState(false);\n    const{loading, final} = useAxios(Linktype);\n    // console.log(final);\n    document.title = \"HackerNews | Top Stories\";\n    \n    if (loading) {\n        return (\n            <div id=\"loa\">\n                <Segment  raised padded inverted id='loaders'>\n                    <Dimmer active>\n                        <Loader inverted></Loader>\n                    </Dimmer>\n                </Segment>\n            </div>\n        )\n    }\n    else {\n        return (\n            <Container >\n                <Feed>\n                    {final.map((item) => {\n                        const {id, title, by, url, score, time } = item.data\n                        return (\n                            <NewsTemplate\n                                key={id}\n                                title={title}\n                                by={by}\n                                url={url}\n                                score={score}\n                                date={time}\n                            />\n                        )\n                    })}\n                </Feed>\n            </Container>\n        )\n    }\n}\n\nexport default TopStories;","import React, {Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Segment, Message, Button} from 'semantic-ui-react';\nimport { Header } from 'semantic-ui-react';\n\nclass ErrorPage extends Component{\n    render(){\n        document.title = 'Error 404: Page Not Found'\n        return(\n            <div id=\"err-page\">\n                <Segment very raised padded  id='err-seg'>\n                   <Message error>\n                       <Header>Uh-Oh.. Looks like you're lost</Header>\n                       <br />\n                        <Button as={Link} to='/' color='red'>Go Back</Button>\n                   </Message>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nexport default ErrorPage;","import { Container, Icon, Menu } from 'semantic-ui-react'\nimport { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Route, Switch } from 'react-router-dom'\nimport BestStories from './BestStories';\nimport NewStories from './NewStories';\nimport TopStories from './TopStories';\nimport ErrorPage from './ErrorPage';\n\nexport default class App extends Component {\n  state = {\n    activeitem: 'best'\n  }\n  handleItemClick = (e, { name }) => {\n    this.setState({\n      activeitem: name\n    })\n  }\n  render() {\n    const { activeitem } = this.state;\n    return (\n      <div id=\"cont\">\n        <Container fluid>\n        <Router>\n          <Menu size='huge' inverted id=\"myHeader\" stackable >\n            <Menu.Item id=\"to-top\">\n              <Icon name='hacker news square' size='large'></Icon>\n            </Menu.Item>\n            <Menu.Item\n              as={NavLink} to='/best'\n              name='best stories'\n              activeitem={activeitem === 'best'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              as={NavLink} to='/top'\n              name='top stories'\n              activeitem={activeitem === 'top'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              as={NavLink} to='/new'\n              name='latest stories'\n              activeitem={activeitem === 'new'}\n              onClick={this.handleItemClick}\n            />\n          </Menu>\n\n          <Switch>\n            <Route\n              exact\n              path='/best'\n              render={() => {\n                return (\n                  <BestStories type={\"best\"} />\n                )\n              }}\n            />\n\n            <Route\n              exact\n              path='/hackernews-clone'\n              render={() => {\n                return (\n                  <BestStories type={\"best\"} />\n                )\n              }}\n            />\n\n            <Route\n              exact\n              path='/top'\n              render={() => {\n                return (\n                  <TopStories type={\"top\"} />\n                )\n              }}\n            />\n\n            <Route\n              exact\n              path='/new'\n              render={() => {\n                return (\n                  <NewStories type={\"new\"} />\n                )\n              }}\n            />\n            <Route \n            path=\"/*\"\n            render={()=>{\n              return(\n                <ErrorPage />\n              )\n            }}\n            />\n\n          </Switch>\n        </Router>\n\n        </Container>\n\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}